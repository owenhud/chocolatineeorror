name: Chocolatine
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'
  workflow_dispatch:
env:
  MIRROR_URL: git@github.com:EpitechPromo2028/B-DOP-200-LIL-2-1-chocolatine-owen.hudson.git
  EXECUTABLES: binary
jobs:
  check_coding_style:
    name: check_coding_style
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run coding style checker
        id: check_coding_style
        run: check.sh $(pwd) $(pwd) 
      - name: Display coding style error
        if: always()
        run: |
          while read line; do
            file=$(echo $line | cut -d":" -f1)
            line_number=$(echo $line | cut -d":" -f2)
            message=$(echo $(echo $line | cut -d":" -f3 | cut -d" " -f2) coding style error)
            code=$(echo $line | cut -d":" -f4)
            echo "::error file=$file,line=$line_number,title=$message::$code"
          done < coding-style-reports.log
      - name: Fail on errors
        if: failure()
        run: exit 1
        
  check_program_compilation:
    needs: check_coding_style
    name: check_program_compilation 
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Check program compilation
        id : check_program_compilation
        run: make
        timeout-minutes: 2
      - name: Cleaning compilation
        run: make clean
  run_tests:
    needs: [check_coding_style, check_program_compilation ]
    name: run_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run tests
        id: run_tests
        run: make tests_run
        timeout-minutes: 2

  push_to_mirror:
    needs: [check_coding_style, check_program_compilation , run_tests]
    if: github.repository != 'EpitechPromo2028/B-DOP-200-LIL-2-1-chocolatine-owen.hudson'
    name: push_to_mirror
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        id: push_to_mirror
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
